name: Build and Tag Docker Image

on:
  push:
    branches:
      - main

jobs:
  build-and-tag:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup JFrog CLI
      uses: jfrog/setup-jfrog-cli@v4
      env:
        JF_URL: ${{ vars.JF_URL }}
        JF_ACCESS_TOKEN: ${{ secrets.JF_ACCESS_TOKEN }}
        
    - name: Build Docker Image
      env:
        IMAGE_NAME: onezptest.jfrog.io/docker-demo-02-docker/jfrog-docker-example-image:${{ github.run_number }}
      run: |
        jf docker build -t $IMAGE_NAME .
        
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@0.30.0
      with:
        image-ref: onezptest.jfrog.io/docker-demo-02-docker/jfrog-docker-example-image:${{ github.run_number }}
        format: 'sarif'
        output: 'trivy-results.sarif'
        
    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'
        
    - name: Run Trivy scanner for critical vulnerabilities
      uses: aquasecurity/trivy-action@0.30.0
      with:
        image-ref: onezptest.jfrog.io/docker-demo-02-docker/jfrog-docker-example-image:${{ github.run_number }}
        format: 'table'
        severity: 'CRITICAL,HIGH'
        exit-code: '1'
        
    - name: Push Docker Image (only if scan passes)
      env:
        IMAGE_NAME: onezptest.jfrog.io/docker-demo-02-docker/jfrog-docker-example-image:${{ github.run_number }}
      run: |
        jf docker push $IMAGE_NAME
        
    - name: Publish Build info With JFrog CLI
      env:
        JFROG_CLI_BUILD_NAME: jfrog-docker-build-example
        JFROG_CLI_BUILD_NUMBER: ${{ github.run_number }}
      run: |
        # Export the build name and build number
        # Collect environment variables for the build
        jf rt build-collect-env
        # Collect VCS details from git and add them to the build
        jf rt build-add-git
        # Publish build info
        jf rt build-publish
